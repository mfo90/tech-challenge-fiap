name: CI/CD Pipeline AuthService.API

on:
  push:
    branches:
      - feature/criar-deploy-microservices
    paths:
      - 'api/AuthService.API/**'
      - 'docker-compose.AuthService.yml'
      - '.github/workflows/authservice-ci.yml'
  pull_request:
    branches:
      - feature/criar-deploy-microservices
    paths:
      - 'api/AuthService.API/**'
      - 'docker-compose.AuthService.yml'
      - '.github/workflows/authservice-ci.yml'

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:latest
        env:
          POSTGRES_USER: matheus
          POSTGRES_PASSWORD: 123456
          POSTGRES_DB: contactsdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U matheus -d contactsdb"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Fazer checkout do código
      uses: actions/checkout@v3

    - name: Configurar .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'

    - name: Esperar pelo Postgres
      run: |
        until pg_isready -h localhost -p 5432 -U matheus; do
          echo "Esperando pelo Postgres...";
          sleep 5;
        done

    - name: Inicializar banco de dados
      run: |
        chmod +x initialize_db.sh
        ./initialize_db.sh

    # Restaurar as dependências da AuthService.API
    - name: Restaurar dependências
      run: dotnet restore api/AuthService.API/AuthService.API.csproj

    # Compilar a AuthService.API
    - name: Compilar solução
      run: dotnet build api/AuthService.API/AuthService.API.csproj --no-restore --configuration Release

    # Executar testes unitários no projeto RegionalContactsApp.Tests
    - name: Executar testes unitários com cobertura (RegionalContactsApp.Tests)
      run: |
        dotnet test api/RegionalContactsApp.Tests/RegionalContactsApp.Tests.csproj --no-build --configuration Release --collect:"XPlat Code Coverage" --results-directory ./TestResults/UnitTests

    # Executar testes de integração no projeto RegionalContactsApp.IntegrationTests
    - name: Executar testes de integração com cobertura (RegionalContactsApp.IntegrationTests)
      env:
        ConnectionStrings__DefaultConnection: Server=localhost;Port=5432;Database=contactsdb;User Id=matheus;Password=123456;
      run: |
        dotnet test api/RegionalContactsApp.IntegrationTests/RegionalContactsApp.IntegrationTests.csproj --no-build --configuration Release --collect:"XPlat Code Coverage" --results-directory ./TestResults/IntegrationTests

    # Relatar cobertura dos testes unitários
    - name: Relatar cobertura dos testes unitários
      uses: actions/upload-artifact@v3
      with:
        name: cobertura-teste-unitario
        path: ./TestResults/UnitTests

    # Relatar cobertura dos testes de integração
    - name: Relatar cobertura dos testes de integração
      uses: actions/upload-artifact@v3
      with:
        name: cobertura-teste-integracao
        path: ./TestResults/IntegrationTests

  build:
    needs: test
    runs-on: self-hosted

    steps:
    - name: Fazer checkout do código
      uses: actions/checkout@v3

    - name: Criar diretório para o repositório, se não existir
      run: |
        if not exist C:\projects\fiap mkdir C:\projects\fiap
      shell: cmd

    - name: Transferir repositório para o diretório local
      run: |
        xcopy . C:\projects\fiap /E /I /Y
      shell: cmd

    - name: Configurar Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Construir imagens Docker da API de autenticação
      run: |
        cd C:\projects\fiap
        docker build --no-cache --pull -t auth-api:latest -f ./api/AuthService.API/Dockerfile.AuthApi ./api/AuthService.API
      shell: cmd

    - name: Limpar cache do Docker
      run: docker builder prune -f
      shell: cmd

    - name: Limpar sistema Docker
      run: docker system prune -af --volumes
      shell: cmd

  deploy:
    needs: build
    runs-on: self-hosted

    steps:
    - name: Fazer deploy localmente
      run: |
        cd C:\projects\fiap
        docker-compose -f docker-compose.AuthService.yml down
        docker-compose -f docker-compose.AuthService.yml build --no-cache
        docker-compose -f docker-compose.AuthService.yml up -d
      shell: cmd